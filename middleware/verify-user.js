const jwt = require("jsonwebtoken");
const AuthError = require("../errors/auth-error");
const { findUserById } = require("../services/userServices");

exports.verifyUser = async (req, res, next) => {
  try {
    const auth = req.cookies;
    if (Object.keys(auth).length === 0) {
      return next(
        new AuthError(
          403,
          "üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ä–µ—Å—É—Ä—Å—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: makarovskyi.v@gmail.com üö´"
        )
      );
    }
    const { accessToken } = auth;
    jwt.verify(
      accessToken,
      process.env.JWT_ACCESS_SECRET,
      async (err, decoded) => {
        if (err) {
          let resourseUrl = req.url ? req.url : ''
          req.body.targetUrl = req.baseUrl + resourseUrl;
          return next(err);
        } else {
          const { userId, exp } = decoded;
          const user = await findUserById(userId);
          req.body.user = user;
          next();
        }
      }
    );
  } catch (error) {
    console.log(error);
  }
};

exports.verifyAdmin = async (req, res, next) => {
  console.log('REQ BODY USER: ', req.body);
  try {
    const status = req.body.user["is_admin"];
    if (!status) {
      return next(
        new AuthError(401, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞")
      );
    }
    next();
  } catch (error) {
    console.error(error);
  }
};
